---

name: build and deploy
on:
  push:
    tags-ignore:
      - '**'
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        Dockerfiles: [Dockerfile.alpine,Dockerfile.buster]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          qemu-version: latest

  -
        name: Prepare
        id: prepare
        run: |
          DOCKER_IMAGE=gucio1200/wireguard
          DOCKER_PLATFORMS=linux/arm/v7
          VERSION=
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=docker_platforms::${DOCKER_PLATFORMS}
          echo ::set-output name=version::${VERSION}

      - name: Run Buildx
        run: |
          for file in ${{ matrix.Dockerfiles }}; do \
            tag=$(echo $file | sed -E 's/.+[\./]([^/\.]+)/\1/') \
            && docker buildx build \
            --platform ${{ steps.prepare.outputs.docker_platforms }} \
            --output "type=image,push=false" \
            --tag ${{ steps.prepare.outputs.docker_image }}:$tag \
            --file $file . ;\
          done

      - name: Docker Login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" --password-stdin

      - name: Docker Buildx (push)
        run: |
          for file in ${{ matrix.Dockerfiles }}; do \
            tag=$(echo $file | sed -E 's/.+[\./]([^/\.]+)/\1/') \
            && docker buildx build \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --platform ${{ steps.prepare.outputs.docker_platforms }} \
            --output "type=image,push=true" \
            --tag ${{ steps.prepare.outputs.docker_image }}:$tag \
            --file $file . ;\
          done
